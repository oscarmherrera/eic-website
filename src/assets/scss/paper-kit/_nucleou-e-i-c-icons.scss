/*--------------------------------

Nucleo-e-i-c icon font
Generated using nucleoapp.com

-------------------------------- */

$icon-e-i-c-font-path: "/fonts" !default;

@font-face {
  font-family: 'Nucleo-e-i-c';
  src: url('#{$icon-e-i-c-font-path}/Nucleo-e-i-c.eot');
  src: url('#{$icon-e-i-c-font-path}/Nucleo-e-i-c.eot') format('embedded-opentype'),
       url('#{$icon-e-i-c-font-path}/Nucleo-e-i-c.woff2') format('woff2'),
       url('#{$icon-e-i-c-font-path}/Nucleo-e-i-c.woff') format('woff'),
       url('#{$icon-e-i-c-font-path}/Nucleo-e-i-c.ttf') format('truetype'),
       url('#{$icon-e-i-c-font-path}/Nucleo-e-i-c.svg') format('svg');
}

/* base class */
.icon {
  display: inline-block;
  font: normal normal normal 1em/1 'Nucleo-e-i-c';
  color: inherit;
  flex-shrink: 0;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* size examples - relative units */
.icon-sm {
  font-size: 0.8em;
}

.icon-lg {
  font-size: 1.2em;
}

/* size examples - absolute units */
.icon-16 {
  font-size: 16px;
}

.icon-32 {
  font-size: 32px;
}

/* rotate the icon infinitely */
.icon-is-spinning {
  animation: icon-spin 1s infinite linear;
}

@keyframes icon-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* transform */
.icon-rotate-90  {
	transform: rotate(90deg);
}

.icon-rotate-180 {
	transform: rotate(180deg);
}

.icon-rotate-270 {
	transform: rotate(270deg);
}

.icon-flip-y {
	transform: scaleY(-1);
}

.icon-flip-x {
	transform: scaleX(-1);
}

/* icons */
$icons: (
  'family-roof': 'ea02',
  'family': 'ea03',
  'tshirt-53': 'ea04',
  'swimsuit': 'ea05',
  'skirt': 'ea06',
  'jeans-41': 'ea07',
  'world': 'ea08',
  'ecology': 'ea09',
  'bulb': 'ea0a',
  'tree-01': 'ea0b',
  'family-roof-1': 'ea0c',
  'family-1': 'ea0d',
  'spain': 'ea0e',
  'uk': 'ea0f',
  'netherlands': 'ea10',
  'cabinet': 'ea11',
  'wardrobe': 'ea12',
  'cockade': 'ea13',
  'round-euro': 'ea14',
  'round-dollar': 'ea15',
  'round-pound': 'ea16',
  'at-sign-2': 'ea17',
);

@function unicode($str) {
  @return unquote("\"\\#{$str}\"");
}

@each $name, $code in $icons {
  .icon-e-i-c-#{""+$name}::before {
    content: unicode($code);
  }
}
